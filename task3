"""
Задание 3.
Для этой задачи
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

company = {'Apple': 1500, 'Linux': 1100, 'IBM': 3220, 'HTC': 5000, 'Sony': 13000}
print(len(company))   # O(len(company)

# способ 1
# сложность O(1)


ineffizient_compamy_1 = min(company,key=lambda x:company[x])     # O(1)
company.pop(ineffizient_compamy_1)                               # O(1)
ineffizient_compamy_2 = min(company,key=lambda x:company[x])     # O(1)
company.pop(ineffizient_compamy_2)                               # O(1)
print(company)

# способ 2
# сложность O(N log N)


def by_value(item):
    return item[1]                                                          # O(1)


max_profit = {}                                                             # O(1)
i = 0                                                                       # O(1)
for k, v in sorted(company.items(), key=by_value, reverse=True):            # O(N log N)
    if i < 3:                                                               # O(len(i)
        max_profit.setdefault(k, v)                                         # O(1)
    i = i + 1                                                               # O(1)
print(max_profit)

# Первый способ выполняется быстрее так как во встором есть O(N log N)
